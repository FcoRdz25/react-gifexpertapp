{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","i","divRoot","document","getElementById","ReactDOM","render"],"mappings":"qMAMaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAqB7C,OACI,oCACI,0BAAMC,SAdM,SAAEC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OASV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAvBU,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,uBCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGrC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,+BAAMA,EAAN,OCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,SAGZ,CAAEpB,IAEEqB,EDjB0BM,CAAc3B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGrB,OACI,oCACI,wBAAKJ,UAAU,qCAAf,IAAsDhB,EAAtD,KACEoB,GAAW,uBAAIJ,UAAU,oCAAd,eACb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,kBAAC,EAAD,eAAakB,IAAMlB,EAAIC,IAAUD,UEW1CmB,EAzBM,WAAO,IAAD,EAEW3C,mBAAU,CAAC,cAFtB,mBAElB4C,EAFkB,KAEN7C,EAFM,KAKvB,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEI6C,EAAWrB,KAAK,SAACT,EAAU+B,GAAX,OACd,kBAAC,EAAD,CACEH,IAAM5B,EACNA,SAAUA,UCbtBgC,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAQ,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.82ef3808.chunk.js","sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        // console.log( e.target.value );\r\n        setInputValue( e.target.value );\r\n    } \r\n\r\n    const handleSumit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            // setCategories( [ inputValue ]);\r\n            setCategories( categorias => [inputValue, ...categorias ]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit hecho');\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSumit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange  }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n} ","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=htO6MkuZxd2zX386i4vMsWEZO0Eabi47` ;\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log( gifs );\r\n    return gifs;\r\n}\r\n\r\n\r\n","\r\n\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url } ) => {\r\n    \r\n    // console.log( id, title, url );\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   \r\n    const { data:images, loading } = useFetchGifs( category );\r\n    // console.log( loading );\r\n    \r\n    return (\r\n        <>\r\n            <h3  className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n            { loading && <p  className=\"animate__animated animate__flash\"> Loading...</p> }\r\n            <div className=\"card-grid\">                \r\n                {\r\n                    images.map( img => (\r\n                        // <li key={img.id}> { img.title} </li>\r\n                        <GifGridItem key={ img.id } { ...img } />\r\n                    ))\r\n                }\r\n            </div>        \r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({        \r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 10 );\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    return state; // { data: [], loading: true }\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState( ['One Punch'] );\r\n\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <AddCategory setCategories={ setCategories } />\r\n          <hr />\r\n\r\n          <ol>\r\n            {\r\n              categories.map( (category, i) => (\r\n                <GifGrid\r\n                  key={ category }\r\n                  category={category}/>              \r\n              ))\r\n            }\r\n          </ol>\r\n    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render( <GifExpertApp />, divRoot );\n\n"],"sourceRoot":""}